;;; chiaroscuro-theme.el --- Low contrast night theme

;;; Commentary:

;;; Code:

(defvar text-1                  "")
(defvar text-2                  "")
(defvar text-3                  "")
(defvar text-hl                 "")
(defvar text-match              "")
(defvar text-diff-added         "")
(defvar text-diff-removed       "")
(defvar background-1            "")
(defvar background-2            "")
(defvar background-3            "")
(defvar background-4            "")
(defvar background-5            "")
(defvar background-6            "")
(defvar background-match        "")
(defvar background-cursor       "")
(defvar background-diff-added   "")
(defvar background-diff-removed "")
(defvar green-1                 "")
(defvar green-2                 "")
(defvar red-1                   "")
(defvar red-2                   "")
(defvar blue-1                  "")
(defvar blue-2                  "")
(defvar yellow-1                "")
(defvar yellow-2                "")
(defvar violet-1                "")
(defvar violet-2                "")
(defvar orange-1                "")
(defvar orange-2                "")
(defvar gray-1                  "")
(defvar gray-2                  "")
(defvar white-1                 "#ffffff")
(defvar line-number-1           "")
(defvar line-number-2           "")
(defvar line-number-3           "")
(defvar line-number-4           "")
(defvar evil-emacs-1            "#ffffff")
(defvar evil-emacs-2            "#bf3eff") ;violet
(defvar evil-normal-1           "#ffffff")
(defvar evil-normal-2           "#00cc00") ;green
(defvar evil-insert-1           "#ffffff")
(defvar evil-insert-2           "#dd0000") ;red
(defvar evil-replace-1          "#ffffff")
(defvar evil-replace-2          "#dd0000") ;red
(defvar evil-replace-1          "#ffffff")
(defvar evil-replace-2          "#ffa500") ;orange
(defvar evil-visual-1           "#ffffff")
(defvar evil-visual-2           "#ffb90f") ;yellow
(defvar evil-motion-1           "#ffffff")
(defvar evil-motion-2           "#4876ff") ;blue
(defvar evil-operator-1         "#ffffff")
(defvar evil-operator-2         "#4876ff") ;blue
(defvar error                   "#ff0000")

(if (eq CHIAROSCURO_INDEX 8) ;pop
    (progn
        (setq text-1 "#e500df")
        (setq text-2 "#ffffff")
        (setq text-3 "#fec1fe")
        (setq text-hl "#e500df")
        (setq text-match "#ffffff")
        (setq background-1 "#ff9cff")
        (setq background-2 "#fc79f8")
        (setq background-3 "#fc79f8")
        (setq background-4 "#fd92fa")
        (setq background-5 "#fc79f8")
        (setq background-match "#fc2ef5")
        (setq background-cursor "#ffffff")
        (setq green-1 "#ffffff")
        (setq green-2 "#e500df")
        (setq red-1 "#ffffff")
        (setq red-2 "#e500df")
        (setq blue-1 "#ffffff")
        (setq blue-2 "#e500df")
        (setq yellow-1 "#ffffff")
        (setq yellow-2 "#e500df")
        (setq violet-1 "#ffffff")
        (setq violet-2 "#e500df")
        (setq orange-1 "#ffffff")
        (setq orange-2 "#e500df")
        (setq gray-1 "#ffffff")
        (setq gray-2 "#e500df")
        (setq line-number-1 "#ffffff")
        (setq line-number-2 "#fc79f8")
        (setq line-number-3 "#fec1fe")
        (setq line-number-4 "#fd92fa")
        (setq text-diff-added "#ffffff")
        (setq background-diff-added "#e500df")
        (setq text-diff-removed "#ffffff")
        (setq background-diff-removed "#e500df")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#ffffff" :background "#ff9cff" :weight bold))))
  )
)

(if (eq CHIAROSCURO_INDEX 7) ;karekare
    (progn
        (setq text-1 "#c0e347")
        (setq text-2 "#b2c4e0")
        (setq text-3 "#6e9714")
        (setq text-hl "#c0e347")
        (setq text-match "#c0e347")
        (setq background-1 "#63667c")
        (setq background-2 "#493b3a")
        (setq background-3 "#545566")
        (setq background-4 "#e34f35")
        (setq background-5 "#314d1d")
        (setq background-match "#e34f35")
        (setq background-cursor "#ffffff")
        (setq green-1 "#c3e84f")
        (setq green-2 "#508729")
        (setq red-1 "#fead97")
        (setq red-2 "#a64c22")
        (setq blue-1 "#a4adfb")
        (setq blue-2 "#3e458c")
        (setq yellow-1 "#fcbf2f")
        (setq yellow-2 "#8d6720")
        (setq violet-1 "#aa8db8")
        (setq violet-2 "#5a4366")
        (setq orange-1 "#fc962f")
        (setq orange-2 "#8d4c20")
        (setq gray-1 "#999999")
        (setq gray-2 "#666666")
        (setq line-number-1 "#ff6044")
        (setq line-number-2 "#211d12")
        (setq line-number-3 "#4e7830")
        (setq line-number-4 "#98b53f")
        (setq text-diff-added "#c3e84f")
        (setq background-diff-added "#508729")
        (setq text-diff-removed "#fead97")
        (setq background-diff-removed "#a64c22")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#c3e84f" :background "#508729" :weight bold))))
  )
)

(if (eq CHIAROSCURO_INDEX 6) ;white
    (progn
        (setq text-1 "#000000")
        (setq text-2 "#000000")
        (setq text-3 "#000000")
        (setq text-hl "#000000")
        (setq text-match "#000000")
        (setq background-1 "#ffffff")
        (setq background-2 "#f0f0f0")
        (setq background-3 "#f0f0f0")
        (setq background-4 "#f0f0f0")
        (setq background-5 "#dddddd")
        (setq background-match "#f0f0f0")
        (setq background-cursor "#ffffff")
        (setq green-1 "#000000")
        (setq green-2 "#ffffff")
        (setq red-1 "#000000")
        (setq red-2 "#f0f0f0")
        (setq blue-1 "#000000")
        (setq blue-2 "#f0f0f0")
        (setq yellow-1 "#000000")
        (setq yellow-2 "#f0f0f0")
        (setq violet-1 "#9400d3")
        (setq violet-2 "#ab82ff")
        (setq orange-1 "#000000")
        (setq orange-2 "#f0f0f0")
        (setq gray-1 "#999999")
        (setq gray-2 "#666666")
        (setq line-number-1 "#000000")
        (setq line-number-2 "#f0f0f0")
        (setq line-number-3 "#000000")
        (setq line-number-4 "#ffffff")
        (setq text-diff-added "#22aa22")
        (setq background-diff-added "#cceecc")
        (setq text-diff-removed "#ac2222")
        (setq background-diff-removed "#eecccc")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#000000" :background "#ffffff" :weight bold))))
  )
)

(if (eq CHIAROSCURO_INDEX 5) ;gioconda
    (progn
        (setq text-1 "#d6af6a")
        (setq text-2 "#9d996a")
        (setq text-3 "#8b9174")
        (setq text-hl "#d6af6a")
        (setq text-match "#ffd47c")
        (setq background-1 "#6b5026")
        (setq background-2 "#3d2920")
        (setq background-3 "#686c54")
        (setq background-4 "#924d13")
        (setq background-5 "#7f3f17")
        (setq background-match "#c88200")
        (setq background-cursor "#d9b369")
        (setq green-1 "#c3e84f")
        (setq green-2 "#508729")
        (setq red-1 "#fead97")
        (setq red-2 "#a64c22")
        (setq blue-1 "#a4adfb")
        (setq blue-2 "#3e458c")
        (setq yellow-1 "#fcbf2f")
        (setq yellow-2 "#8d6720")
        (setq violet-1 "#aa8db8")
        (setq violet-2 "#5a4366")
        (setq orange-1 "#fc962f")
        (setq orange-2 "#8d4c20")
        (setq gray-1 "#999999")
        (setq gray-2 "#666666")
        (setq line-number-1 "#000000")
        (setq line-number-2 "#ddb672")
        (setq line-number-3 "#9d996a")
        (setq line-number-4 "#946c15")
        (setq text-diff-added "#c3e84f")
        (setq background-diff-added "#508729")
        (setq text-diff-removed "#fead97")
        (setq background-diff-removed "#a64c22")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#c3e84f" :background "#508729" :weight bold))))
  )
)

(if (eq CHIAROSCURO_INDEX 4) ;caravaggio
    (progn
        (setq text-1 "#c3ac88")
        (setq text-2 "#89918f")
        (setq text-3 "#943632")
        (setq text-hl "#c3ac88")
        (setq text-match "#ffd47c")
        (setq background-1 "#272c28")
        (setq background-2 "#433b33")
        (setq background-3 "#49604b")
        (setq background-4 "#91423a")
        (setq background-5 "#693126")
        (setq background-6 "#433b33")
        (setq background-match "#96653f")
        (setq background-cursor "#d7b269")
        (setq green-1 "#b4ba5f")
        (setq green-2 "#2b550c")
        (setq red-1 "#f17b6c")
        (setq red-2 "#48241f")
        (setq blue-1 "#a5b1a5")
        (setq blue-2 "#104342")
        (setq yellow-1 "#d0b254")
        (setq yellow-2 "#5a3d05")
        (setq violet-1 "#ab6d47")
        (setq violet-2 "#70432d")
        (setq orange-1 "#d08e54")
        (setq orange-2 "#5a3005")
        (setq gray-1 "#89918f")
        (setq gray-2 "#666666")
        (setq line-number-1 "#c09e56")
        (setq line-number-2 "#95722f")
        (setq line-number-3 "#89918f")
        (setq line-number-4 "#475f5e")
        (setq text-diff-added "#b4ba5f")
        (setq background-diff-added "#2b550c")
        (setq text-diff-removed "#f17b6c")
        (setq background-diff-removed "#48241f")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#b4ba5f" :background "#2b550c" :weight bold))))
    )
  )

(if (eq CHIAROSCURO_INDEX 3) ;orange
    (progn
        (setq text-1 "#f98801")
        (setq text-2 "#89918f")
        (setq text-3 "#aa6008")
        (setq text-hl "#f9b501")
        (setq text-match "#ffb700")
        (setq background-1 "#444444")
        (setq background-2 "#333333")
        (setq background-3 "#222222")
        (setq background-4 "#333333")
        (setq background-5 "#222222")
        (setq background-match "#211d12")
        (setq background-cursor "#ffb700")
        (setq green-1 "#c3e84f")
        (setq green-2 "#508729")
        (setq red-1 "#fead97")
        (setq red-2 "#a64c22")
        (setq blue-1 "#a4adfb")
        (setq blue-2 "#3e458c")
        (setq yellow-1 "#fcbf2f")
        (setq yellow-2 "#8d6720")
        (setq violet-1 "#aa8db8")
        (setq violet-2 "#5a4366")
        (setq orange-1 "#ffa500")
        (setq orange-2 "#8d4c20")
        (setq gray-1 "#999999")
        (setq gray-2 "#666666")
        (setq line-number-1 "#ff6044")
        (setq line-number-2 "#211d12")
        (setq line-number-3 "#89918f")
        (setq line-number-4 "#475f5e")
        (setq text-diff-added "#c3e84f")
        (setq background-diff-added "#508729")
        (setq text-diff-removed "#fead97")
        (setq background-diff-removed "#a64c22")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#c3e84f" :background "#508729" :weight bold))))
  )
)

(if (eq CHIAROSCURO_INDEX 2) ;light gray
    (progn
        (setq text-1 "#444444")
        (setq text-2 "#999999")
        (setq text-3 "#bbbbbb")
        (setq text-hl "#444444")
        (setq text-match "#22aa22")
        (setq background-1 "#dddddd")
        (setq background-2 "#cccccc")
        (setq background-3 "#d5d5d5")
        (setq background-4 "#d7d7d7")
        (setq background-5 "#cccccc")
        (setq background-6 "#cccccc")
        (setq background-match "#cceecc")
        (setq background-cursor "#000000")
        (setq green-1 "#22aa22")
        (setq green-2 "#cceecc")
        (setq red-1 "#ac2222")
        (setq red-2 "#eecccc")
        (setq blue-1 "#2222ac")
        (setq blue-2 "#ccccee")
        (setq yellow-1 "#acac22")
        (setq yellow-2 "#eeeecc")
        (setq violet-1 "#9400d3")
        (setq violet-2 "#ab82ff")
        (setq orange-1 "#ac7622")
        (setq orange-2 "#eedccc")
        (setq gray-1 "#666666")
        (setq gray-2 "#999999")
        (setq line-number-1 "#acac22")
        (setq line-number-2 "#eeeecc")
        (setq line-number-3 "#999999")
        (setq line-number-4 "#d7d7d7")
        (setq text-diff-added "#22aa22")
        (setq background-diff-added "#cceecc")
        (setq text-diff-removed "#ac2222")
        (setq background-diff-removed "#eecccc")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#22aa22" :background "#cceecc" :weight bold))))
    )
)

(if (eq CHIAROSCURO_INDEX 1) ;terminal
    (progn
        (setq text-1 "#00cc00")
        (setq text-2 "#009900")
        (setq text-3 "#006600")
        (setq text-hl "#00ff00")
        (setq text-match "#f974f9")
        (setq background-1 "#000000")
        (setq background-2 "#003300")
        (setq background-3 "#111111")
        (setq background-4 "#003300")
        (setq background-5 "#006600")
        (setq background-6 "#009900")
        (setq background-match "#43006d")
        (setq background-cursor "#00ff00")
        (setq green-1 "#00cc00")
        (setq green-2 "#005d00")
        (setq red-1 "#fa529b")
        (setq red-2 "#000000")
        (setq blue-1 "#7a70f7")
        (setq blue-2 "#000000")
        (setq yellow-1 "#eead0e")
        (setq yellow-2 "#000000")
        (setq violet-1 "#fd86fd")
        (setq violet-2 "#43006d")
        (setq orange-1 "#e87b2c")
        (setq orange-2 "#000000")
        (setq gray-1 "#777777")
        (setq gray-2 "#222222")
        (setq line-number-1 "#00ff00")
        (setq line-number-2 "#003300")
        (setq line-number-3 "#009900")
        (setq line-number-4 "#000000")
        (setq text-diff-added "#00cc00")
        (setq background-diff-added "#005d00")
        (setq text-diff-removed "#f15a83")
        (setq background-diff-removed "#790725")
        (setq org-todo-keyword-faces '(("IN-PROGRESS" . (:foreground "#00ff00" :background "#006d00" :weight bold))))
  )
)

(if (> CHIAROSCURO_INDEX 7)
    (progn
        (setq CHIAROSCURO_INDEX 0)
    )
)

(if (< CHIAROSCURO_INDEX 0)
    (progn
        (setq CHIAROSCURO_INDEX 7)
    )
)

(deftheme chiaroscuro)

;(defun my:theme-base()
;  (interactive)
;  (set-face-attribute 'default nil :background background-color)
;  (set-face-attribute 'link    nil :foreground colorB-1 :underline t)
;)

(custom-theme-set-faces 'chiaroscuro

  ;base
  `(default                      ((t (:foreground ,text-1        :background ,background-1            ))))
  `(cursor                       ((t (                           :background ,background-cursor       ))))
  `(link                         ((t (:foreground ,text-1        :underline t                         ))))
  `(region                       ((t (:foreground ,text-1        :background ,background-5            ))))
  `(cua-rectangle                ((t (:foreground ,text-1        :background ,background-5            ))))
  `(highlight                    ((t (:foreground ,text-1        :background ,nil                     ))))
  `(show-paren-match             ((t (:foreground ,text-hl       :background ,background-5            ))))
  `(hl-line                      ((t (:foreground ,text-hl       :background ,background-4            ))))
  `(fringe                       ((t (:foreground ,text-1        :background ,background-2            ))))
  `(minibuffer-prompt            ((t (:foreground ,text-1        :background ,background-1            ))))
  `(ido-first-match              ((t (:foreground ,violet-1      :background ,violet-2 :bold t))))
  `(ido-only-match               ((t (:foreground ,violet-1      :background ,violet-2 :bold t))))
  `(lsp-face-highlight-read      ((t (:foreground ,violet-1      :background ,violet-2 :bold t        ))))
  `(lsp-face-highlight-write     ((t (:foreground ,violet-1      :background ,violet-2 :bold t        ))))
  `(eshell-prompt                ((t (:foreground ,text-2        :background ,background-1 :bold t    ))))
  `(secondary-selection          ((t (:foreground ,blue-1        :background ,blue-2 :bold t          ))))
  `(git-commit-summary           ((t (:foreground ,blue-1        :background ,blue-2                  ))))

  `(line-number-current-line     ((t (:foreground ,line-number-1 :background ,line-number-2 :bold t   ))))
  `(line-number                  ((t (:foreground ,line-number-3 :background ,line-number-4           ))))
  `(line-number-major-tick       ((t (:foreground ,line-number-3 :background ,line-number-4           ))))
  `(line-number-minor-tick       ((t (:foreground ,line-number-3 :background ,line-number-4           ))))

  ;font-lock
  `(font-lock-builtin-face              ((t (:foreground ,text-1                                      ))))
  `(font-lock-comment-delimiter-face    ((t (:foreground ,text-1                                      ))))
  `(font-lock-comment-face              ((t (:foreground ,text-2                                      ))))
  `(font-lock-constant-face             ((t (:foreground ,orange-1                                    ))))
  `(font-lock-doc-face                  ((t (:foreground ,text-2                                      ))))
  `(font-lock-function-name-face        ((t (:foreground ,green-1      :background ,green-2  :bold t  ))))
  `(font-lock-keyword-face              ((t (:foreground ,yellow-1     :bold t                        ))))
  `(font-lock-negation-char-face        ((t (:foreground ,text-1                                      ))))
  `(font-lock-preprocessor-face         ((t (:foreground ,violet-1                                    ))))
  `(font-lock-regexp-grouping-backslash ((t (:foreground ,text-1                                      ))))
  `(font-lock-regexp-grouping-construct ((t (:foreground ,text-1                                      ))))
  `(font-lock-string-face               ((t (:foreground ,text-2                                      ))))
  `(font-lock-type-face                 ((t (:foreground ,red-1                                       ))))
  `(font-lock-variable-name-face        ((t (:foreground ,blue-1       :bold t                        ))))
  `(font-lock-warning-face              ((t (:foreground ,background-2 :background ,background-1      ))))
  `(dired-special                       ((t (:foreground ,violet-1                                    ))))

  ;dired
  `(dired-directory       ((t (:foreground ,violet-1 :background, violet-2    ))))
  `(dired-flagged         ((t (:foreground ,red-1    :background, red-2       ))))
  `(dired-header          ((t (:foreground ,text-1   :background, background-1))))
  `(dired-ignored         ((t (:foreground ,text-1   :background, background-1))))
  `(dired-mark            ((t (:foreground ,red-1    :background, red-2       ))))
  `(dired-marked          ((t (:foreground ,red-1    :background, red-2       ))))
  `(dired-narrow-blink    ((t (:foreground ,text-1   :background, background-1))))
  `(dired-perm-write      ((t (:foreground ,text-1   :background, background-1))))
  `(dired-set-id          ((t (:foreground ,text-1   :background, background-1))))
  `(dired-symlink         ((t (:foreground ,text-1   :background, background-1))))
  `(dired-warning         ((t (:foreground ,text-1   :background, background-1))))

  ;helm
  `(helm-minibuffer-prompt            ((t (:foreground ,text-1 :background ,background-1             ))))
  `(helm-match                        ((t (:foreground ,text-1                                         ))))
  `(helm-candidate-number             ((t (:foreground ,text-1                                         ))))
  `(helm-M-x-key                      ((t (:foreground ,text-1 :underline t                            ))))
  `(helm-source-header                ((t (:foreground ,text-1 :bold t                                 ))))
  `(helm-selection                    ((t (:foreground ,text-match :background ,background-match :bold t    ))))
  `(helm-swoop-target-line-face       ((t (:foreground ,text-match :background ,background-match :bold t                                 ))))
  `(helm-swoop-target-word-face       ((t (:foreground ,violet-1 :background ,violet-2 :bold t     ))))
  `(helm-swoop-line-number-face       ((t (:foreground ,text-1 :background ,background-1 :weight bold))))
  `(helm-swoop-target-line-block-face ((t (:foreground ,text-1 :background ,background-1             ))))
  `(helm-ff-rsync-progress            ((t (:foreground ,text-1                                         ))))
  `(helm-ff-rsync-progress            ((t (:foreground ,text-1                                         ))))
  `(helm-buffer-saved-out             ((t (:foreground ,text-1                                         ))))
  `(helm-ff-prefix                    ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(helm-buffer-directory             ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(helm-ff-directory                 ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(helm-ff-dotted-directory          ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(helm-ff-file-extension            ((t (:foreground ,green-1  :background ,green-2                                        ))))
  `(helm-grep-file                    ((t (:foreground ,text-1   :background ,nil :bold t :underline t                                      ))))
  `(helm-grep-finish                  ((t (:foreground ,violet-1  :background ,violet-2                                        ))))
  `(helm-grep-lineno                  ((t (:foreground ,text-2                                          ))))
  `(helm-grep-match                   ((t (:foreground ,text-match :background ,background-match                                        ))))
  `(markdown-highlighting-face        ((t (:foreground ,green-1  :background ,green-2                                        ))))
  `(helm-header-line-left-margin      ((t (:foreground ,green-1  :background ,green-2                                        ))))
  `(cua-global-mark                   ((t (:foreground ,green-1  :background ,green-2                                        ))))
  `(helm-match-item                   ((t (:foreground ,violet-1 :background ,violet-2 :weight bold                           ))))
  `(helm-separator                    ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(helm-lisp-completion-info         ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(ivy-match-required-face           ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(transient-red                     ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(info-menu-star                    ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))
  `(helm-ff-denied                    ((t (:foreground ,yellow-1 :background ,yellow-2                                        ))))

  ;`(helm-ff-socket                    ((t (:foreground ,violet-1 :background ,violet-2 :weight bold                           ))))


  ;ido
  `(ido-subdir                        ((t (:foreground ,text-1))))

  ;elfeed
  `(elfeed-log-date-face            ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-log-debug-level-face     ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-log-error-level-face     ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-log-info-level-face      ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-log-warn-level-face      ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-date-face         ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-feed-face         ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-filter-face       ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-last-update-face  ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-tag-face          ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-title-face        ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-unread-count-face ((t (:foreground ,text-1 :background ,background-1))))
  `(elfeed-search-unread-title-face ((t (:foreground ,text-1 :background ,background-1))))
  `(message-header-cc               ((t (:foreground ,text-1                          ))))
  `(message-header-name             ((t (:foreground ,text-1                          ))))
  `(message-header-newsgroups       ((t (:foreground ,text-1                          ))))
  `(message-header-other            ((t (:foreground ,text-1                          ))))
  `(message-header-subject          ((t (:foreground ,text-1                          ))))
  `(message-header-to               ((t (:foreground ,text-1                          ))))
  `(header-line                     ((t (:foreground ,text-1                          ))))

  ;magit
  `(magit-hash                      ((t (:foreground ,text-2                                                                     ))))
  `(magit-header-line               ((t (:foreground ,text-1   :bold t                                                                   ))))
  `(magit-section-heading           ((t (:foreground ,text-1                                                                             ))))
  `(magit-branch-current            ((t (:foreground ,green-1  :background ,green-2      :bold t :box (:line-width 3 :color ,green-1)))))
  `(magit-branch-local              ((t (:foreground ,green-1  :background ,green-2      :bold t :box (:line-width 3 :color ,green-1)))))
  `(magit-branch-remote             ((t (:foreground ,red-1    :background ,red-2        :bold t :box (:line-width 3 :color ,red-1)  ))))
  `(magit-branch-remote-head        ((t (:foreground ,red-1    :background ,red-2        :bold t :box (:line-width 3 :color ,red-1)  ))))
  `(magit-branch-upstream           ((t (:foreground ,red-1    :background ,red-2        :bold t :box (:line-width 3 :color ,red-1)  ))))
  `(magit-section-highlight         ((t (                      :background ,background-2 :bold t                                       ))))
  `(magit-log-author                ((t (:foreground ,text-2                                                                            ))))
  `(magit-log-date                  ((t (:foreground ,text-2                                                                            ))))
  `(magit-keyword-squash            ((t (:foreground ,text-1                                                                            ))))

  `(magit-diff-context                ((t (:foreground ,gray-1   :background ,nil                                                          ))))
  `(magit-diff-context-highlight      ((t (:foreground ,gray-1   :background ,background-2                                                          ))))

  `(magit-diff-hunk-region            ((t (:foreground ,text-1   :background ,nil                                               ))))
  `(magit-diff-conflict-heading       ((t (:foreground ,text-1   :background ,nil                                               ))))

  `(magit-diff-file-heading           ((t (:foreground ,gray-1   :background ,nil :bold t                                              ))))
  `(magit-diff-file-heading-selection ((t (:foreground ,violet-1 :background ,nil :bold t                                              ))))
  `(magit-diff-file-heading-highlight ((t (:foreground ,violet-1 :background ,nil :bold t                                              ))))

  `(magit-diff-hunk-heading           ((t (:foreground ,gray-1   :background ,violet-2                                               ))))
  `(magit-diff-hunk-heading-selection ((t (:foreground ,violet-1 :background ,violet-2                                               ))))
  `(magit-diff-hunk-heading-highlight ((t (:foreground ,violet-1 :background ,violet-2                                              ))))

  `(magit-diff-whitespace-warning     ((t (:foreground ,text-1   :background ,violet-1                                                      ))))

  `(magit-diff-added-highlight        ((t (:foreground ,text-diff-added  :background ,background-diff-added                                                    ))))
  `(magit-diff-removed-highlight      ((t (:foreground ,text-diff-removed    :background ,background-diff-removed                                                      ))))

  `(magit-diff-added                  ((t (:foreground ,text-diff-added  :background ,nil                                               ))))
  `(magit-diff-removed                ((t (:foreground ,text-diff-removed    :background ,nil                                               ))))

  `(magit-blame-heading               ((t (:foreground ,text-diff-added  :background ,background-diff-added  :bold t                                            ))))
  `(magit-blame-highlight             ((t (:foreground ,text-diff-added  :background ,background-diff-added  :bold t                                            ))))
  `(magit-blame-margin                ((t (:foreground ,text-diff-added  :background ,background-diff-added  :bold t                                            ))))

  ;org
  `(org-agenda-calendar-event         ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-calendar-sexp          ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-clocking               ((t (:foreground ,green-1 :background ,green-2                                                    ))))
  `(org-agenda-column-dateline        ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-current-time           ((t (:foreground ,text-2  :background ,background-3                                       ))))
  `(org-agenda-date                   ((t (:foreground ,text-2                                                                            ))))
  `(org-agenda-date-today             ((t (:foreground ,text-2                              :bold t                                       ))))
  `(org-agenda-date-weekend           ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-diary                  ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-dimmed-todo-face       ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-done                   ((t (:foreground ,text-2  :background ,nil                                                                          ))))
  `(org-agenda-filter-category        ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-filter-effort          ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-filter-regexp          ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-filter-tags            ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-restriction-lock       ((t (:foreground ,text-1                                                                            ))))
  `(org-agenda-structure              ((t (:foreground ,text-1                                                                            ))))
  `(org-archived                      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-block                         ((t (:foreground ,text-1  :background ,background-4 ))))
  `(org-block-begin-line              ((t (:foreground ,text-2  :background ,background-2                                               ))))
  `(org-block-end-line                ((t (:foreground ,text-2  :background ,background-2                                               ))))
  `(org-checkbox                      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-checkbox-statistics-done      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-checkbox-statistics-todo      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-clock-overlay                 ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-code                          ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-column                        ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-column-title                  ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-date                          ((t (:foreground ,red-1   :background ,red-2                           :underline t                                  ))))
  `(org-date-selected                 ((t (:foreground ,yellow-1  :background ,yellow-2 ))))
  `(org-default                       ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-document-info                 ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-document-info-keyword         ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-document-title                ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-done                          ((t (:foreground ,text-2                              :bold t                                       ))))
  `(org-drawer                        ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-ellipsis                      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-footnote                      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-formula                       ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-headline-done                 ((t (:foreground ,text-2  :background ,background-1 ))))
  `(org-headline-todo                 ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-hide                          ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-latex-and-related             ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-level-1                       ((t (:foreground ,green-1  :background ,nil :bold t))))
  `(org-level-2                       ((t (:foreground ,red-1    :background ,nil :bold t))))
  `(org-level-3                       ((t (:foreground ,blue-1   :background ,nil :bold t))))
  `(org-level-4                       ((t (:foreground ,yellow-1 :background ,nil :bold t))))
  `(org-level-5                       ((t (:foreground ,green-1  :background ,nil :bold t))))
  `(org-level-6                       ((t (:foreground ,red-1    :background ,nil :bold t))))
  `(org-level-7                       ((t (:foreground ,blue-1   :background ,nil :bold t))))
  `(org-level-8                       ((t (:foreground ,yellow-1 :background ,nil :bold t))))
  `(org-link                          ((t (:foreground ,blue-1  :background ,blue-2 :bold t :underline t))))
  `(org-list-dt                       ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-macro                         ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-meta-line                     ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-mode-line-clock               ((t (:foreground ,text-1  :background ,background-2 ))))
  `(org-mode-line-clock-overrun       ((t (:foreground ,red-2  :background ,red-1 ))))
  `(org-priority                      ((t (:foreground ,yellow-1  :background ,yellow-2 ))))
  `(org-property-value                ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-quote                         ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-scheduled                     ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-scheduled-previously          ((t (:foreground ,text-2  :background ,background-1 ))))
  `(org-scheduled-today               ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-sexp-date                     ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-special-keyword               ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-table                         ((t (:foreground ,text-1  :background ,background-4 ))))
  `(org-table-header                  ((t (:foreground ,green-1  :background ,green-2 ))))
  `(org-tag                           ((t (:foreground ,text-2  :background ,background-1 ))))
  `(org-tag-group                     ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-target                        ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-time-grid                     ((t (:foreground ,text-3  :background ,background-1 ))))
  `(org-todo                          ((t (:foreground ,red-1   :background ,red-2              :bold t                                       ))))
  `(org-upcoming-deadline             ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-upcoming-distant-deadline     ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-verbatim                      ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-verse                         ((t (:foreground ,text-1  :background ,background-1 ))))
  `(org-warning                       ((t (:foreground ,text-1  :background ,background-1 ))))

  `(diff-added                       ((t (:foreground ,text-diff-added    :background ,background-diff-added ))))
  `(diff-removed                     ((t (:foreground ,text-diff-removed  :background ,background-diff-removed ))))

  ;mode-line
  `(mode-line                         ((t (:foreground ,text-1 :background ,background-2))))
  `(mode-line-inactive                ((t (:foreground ,text-2 :background ,background-2))))
  `(mode-line-buffer-id               ((t (:foreground ,violet-1 :background ,violet-2 :bold t :underline t :italic t ))))

  `(telephone-line-accent-active      ((t (:foreground ,text-1          :background ,background-1))))
  `(telephone-line-accent-inactive    ((t (:foreground ,text-2          :background ,background-1))))
;  `(telephone-line-error              ((t (:foreground ,violet-1       :background ,violet-2))))
;  `(telephone-line-evil               ((t (:foreground ,violet-1       :background ,violet-2))))
  `(telephone-line-evil-emacs         ((t (:foreground ,evil-emacs-1    :background ,evil-emacs-2))))
;  `(telephone-line-evil-god           ((t (:foreground ,violet-1       :background ,violet-2))))
  `(telephone-line-evil-insert        ((t (:foreground ,evil-insert-1   :background ,evil-insert-2))))
  `(telephone-line-evil-motion        ((t (:foreground ,evil-motion-1   :background ,evil-motion-2))))
  `(telephone-line-evil-normal        ((t (:foreground ,evil-normal-1   :background ,evil-normal-2))))
  `(telephone-line-evil-operator      ((t (:foreground ,evil-operator-1 :background ,evil-operator-2))))
  `(telephone-line-evil-replace       ((t (:foreground ,evil-replace-1  :background ,evil-replace-2))))
  `(telephone-line-evil-visual        ((t (:foreground ,evil-visual-1   :background ,evil-visual-2))))
  `(telephone-line-projectile         ((t (:foreground ,text-hl :background ,background-5 :bold t :box (:line-width 3 :color ,text-hl)))))
;  `(telephone-line-unimportant        ((t (:foreground ,yellow-1))))
  `(telephone-line-warning            ((t (:foreground ,text-1))))

;  `(evil-ex-commands                  ((t (:foreground ,text-1 :background ,background-1))))
;  `(evil-ex-info                      ((t (:foreground ,text-1 :background ,background-1))))
  `(evil-ex-lazy-highlight            ((t (:foreground ,violet-1 :background ,violet-2))))
  `(evil-ex-search                    ((t (:foreground ,violet-1 :background ,violet-2))))
  `(evil-ex-substitute-matches        ((t (:foreground ,violet-1 :background ,violet-2))))
  `(lazy-highlight                    ((t (:foreground ,violet-1 :background ,violet-2))))
  `(isearch                           ((t (:foreground ,violet-1 :background ,violet-2))))
;  `(query-replace        ((t (:foreground ,violet-1 :background ,violet-2))))
;  `(evil-ex-substitute-replacement    ((t (:foreground ,text-1 :background ,background-1))))

  `(doom-modeline-bar                 ((t (:foreground ,text-1                            ))))
  `(doom-modeline-bar-inactive        ((t (:foreground ,text-1                            ))))
  `(doom-modeline-battery-charging    ((t (:foreground ,text-1                            ))))
  `(doom-modeline-battery-critical    ((t (:foreground ,text-1                            ))))
  `(doom-modeline-battery-error       ((t (:foreground ,text-1                            ))))
  `(doom-modeline-battery-full        ((t (:foreground ,text-1                            ))))
  `(doom-modeline-battery-normal      ((t (:foreground ,text-1                            ))))
  `(doom-modeline-battery-warning     ((t (:foreground ,text-1                            ))))
  `(doom-modeline-buffer-file         ((t (:foreground ,text-1                            ))))
  `(doom-modeline-buffer-major-mode   ((t (:foreground ,text-1                            ))))
  `(doom-modeline-buffer-minor-mode   ((t (:foreground ,text-1                            ))))
  `(doom-modeline-buffer-modified     ((t (:foreground ,text-1                            ))))
  `(doom-modeline-buffer-path         ((t (:foreground ,text-1                            ))))
  `(doom-modeline-buffer-timemachine  ((t (:foreground ,text-1                            ))))
  `(doom-modeline-debug               ((t (:foreground ,text-1                            ))))
  `(doom-modeline-debug-visual        ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-emacs-state    ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-insert-state   ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-motion-state   ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-normal-state   ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-operator-state ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-replace-state  ((t (:foreground ,text-1                            ))))
  `(doom-modeline-evil-visual-state   ((t (:foreground ,text-1                            ))))
  `(doom-modeline-highlight           ((t (:foreground ,text-1                            ))))
  `(doom-modeline-host                ((t (:foreground ,text-1                            ))))
  `(doom-modeline-info                ((t (:foreground ,text-1                            ))))
  `(doom-modeline-input-method        ((t (:foreground ,text-1                            ))))
  `(doom-modeline-input-method-alt    ((t (:foreground ,text-1                            ))))
  `(doom-modeline-lsp-error           ((t (:foreground ,text-1                            ))))
  `(doom-modeline-lsp-running         ((t (:foreground ,text-1                            ))))
  `(doom-modeline-lsp-success         ((t (:foreground ,text-1                            ))))
  `(doom-modeline-lsp-warning         ((t (:foreground ,text-1                            ))))
  `(doom-modeline-notification        ((t (:foreground ,text-1                            ))))
  `(doom-modeline-panel               ((t (:foreground ,text-1                            ))))
  `(doom-modeline-urgent              ((t (:foreground ,text-1                            ))))
  `(doom-modeline-vspc-face           ((t (:foreground ,text-1                            ))))
  `(doom-modeline-warning             ((t (:foreground ,text-1                            ))))

  `(all-the-icons-blue       ((t (:foreground ,text-1))))
  `(all-the-icons-blue-alt   ((t (:foreground ,text-1))))
  `(all-the-icons-cyan       ((t (:foreground ,text-1))))
  `(all-the-icons-cyan-alt   ((t (:foreground ,text-1))))
  `(all-the-icons-dblue      ((t (:foreground ,text-1))))
  `(all-the-icons-dcyan      ((t (:foreground ,text-1))))
  `(all-the-icons-dgreen     ((t (:foreground ,text-1))))
  `(all-the-icons-dmaroon    ((t (:foreground ,text-1))))
  `(all-the-icons-dorange    ((t (:foreground ,text-1))))
  `(all-the-icons-dpink      ((t (:foreground ,text-1))))
  `(all-the-icons-dpurple    ((t (:foreground ,text-1))))
  `(all-the-icons-dred       ((t (:foreground ,text-1))))
  `(all-the-icons-dsilver    ((t (:foreground ,text-1))))
  `(all-the-icons-dyellow    ((t (:foreground ,text-1))))
  `(all-the-icons-green      ((t (:foreground ,text-1))))
  `(all-the-icons-lblue      ((t (:foreground ,text-1))))
  `(all-the-icons-lcyan      ((t (:foreground ,text-1))))
  `(all-the-icons-lgreen     ((t (:foreground ,text-1))))
  `(all-the-icons-lmaroon    ((t (:foreground ,text-1))))
  `(all-the-icons-lorange    ((t (:foreground ,text-1))))
  `(all-the-icons-lpink      ((t (:foreground ,text-1))))
  `(all-the-icons-lpurple    ((t (:foreground ,text-1))))
  `(all-the-icons-lred       ((t (:foreground ,text-1))))
  `(all-the-icons-lsilver    ((t (:foreground ,text-1))))
  `(all-the-icons-lyellow    ((t (:foreground ,text-1))))
  `(all-the-icons-maroon     ((t (:foreground ,text-1))))
  `(all-the-icons-orange     ((t (:foreground ,text-1))))
  `(all-the-icons-pink       ((t (:foreground ,text-1))))
  `(all-the-icons-purple     ((t (:foreground ,text-1))))
  `(all-the-icons-purple-alt ((t (:foreground ,text-1))))
  `(all-the-icons-red        ((t (:foreground ,text-1))))
  `(all-the-icons-red-alt    ((t (:foreground ,text-1))))
  `(all-the-icons-silver     ((t (:foreground ,text-1))))
  `(all-the-icons-yellow     ((t (:foreground ,text-1))))

  `(whitespace-big-indent       ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-empty            ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-hspace           ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-indentation      ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-line             ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-newline          ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-space            ((t (:foreground ,text-2 :background ,background-1))))
  `(whitespace-space-after-tab  ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-space-before-tab ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-tab              ((t (:foreground ,violet-1 :background ,violet-2))))
  `(whitespace-trailing         ((t (:foreground ,violet-1 :background ,violet-2))))

  `(dashboard-banner-logo-title  ((t (:foreground ,text-1 :background ,background-1))))
  `(dashboard-footer             ((t (:foreground ,text-1 :background ,background-1))))
  `(dashboard-heading            ((t (:foreground ,text-1 :background ,background-1 :bold t))))
  `(dashboard-items-face         ((t (:foreground ,text-1 :background ,background-1 :bold t))))
  `(dashboard-navigator          ((t (:foreground ,text-1 :background ,background-1))))
  `(dashboard-no-items-face      ((t (:foreground ,text-1 :background ,background-1))))
  `(dashboard-text-banner        ((t (:foreground ,text-1 :background ,background-1))))

  `(flycheck-error                            ((t (:foreground ,error :bold t :italic t))))
  `(lsp-lsp-flycheck-warning-unnecessary-face ((t (:foreground ,error :bold t :italic t))))
  `(flycheck-fringe-info                      ((t (:foreground ,error))))
  `(flycheck-fringe-warning                   ((t (:foreground ,error))))
  `(flycheck-fringe-error                     ((t (:foreground ,error))))

  `(ansi-color-bold                 ((t (:foreground ,violet-1 :background ,violet-2 :bold t))))

  `(ivy-current-match               ((t (:foreground ,violet-1 :background ,violet-2      ))))
  `(ivy-highlight-face              ((t (:foreground ,violet-1 :background ,violet-2      ))))
  `(ivy-minibuffer-match-face-1     ((t (:foreground ,violet-1 :background ,violet-2 :bold))))
  `(ivy-minibuffer-match-face-2     ((t (:foreground ,violet-1 :background ,violet-2 :bold))))
  `(ivy-minibuffer-match-face-3     ((t (:foreground ,violet-1 :background ,violet-2 :bold))))
  `(ivy-minibuffer-match-face-4     ((t (:foreground ,violet-1 :background ,violet-2 :bold))))
)

;;;###autoload
(when load-file-name
     (add-to-list 'custom-theme-load-path
         (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'chiaroscuro)

;;; chiaroscuro-theme.el ends here
